trigger UBI images build:
  stage: postrelease
  extends:
  - .rules:release:all
  variables:
    BUILD_RELEASE: ${CI_COMMIT_REF_NAME}
  trigger: gitlab-org/ci-cd/gitlab-runner-ubi-images

trigger runner-incept tests:
  rules:
    # copy of .rules:merge_request_pipelines:no_docs:only_canonical, slightly modified for variables
    - if: '$CI_PROJECT_NAMESPACE !~ /^gitlab-org($|\/)/'
      when: never
    - if: $CI_PROJECT_PATH != "gitlab-org/gitlab-runner"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes: !reference [.code-backstage-patterns]
      variables:
        UPSTREAM_CI_COMMIT_REF: "refs/merge-requests/${CI_MERGE_REQUEST_IID}/merge"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes: !reference [.code-backstage-patterns]
      variables:
        UPSTREAM_CI_COMMIT_REF: $CI_COMMIT_REF_NAME
    - if: $CI_COMMIT_REF_NAME =~ /\Av[0-9]+\.[0-9]+\.[0-9]+?\z/
      changes: !reference [.code-backstage-patterns]
      variables:
        UPSTREAM_CI_COMMIT_REF: $CI_COMMIT_REF_NAME
    - if: $CI_COMMIT_REF_NAME =~ /\Av[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+)?\z/
      changes: !reference [.code-backstage-patterns]
      variables:
        UPSTREAM_CI_COMMIT_REF: $CI_COMMIT_REF_NAME
  needs:
    - "binaries: [linux/386 linux/arm]"
    - "binaries: [linux/amd64 linux/arm64]"
    - "binaries: [linux/s390x linux/ppc64le]"
    - "helper images: [alpine]"
    - job: "development docker images"
      optional: true
    - job: "development helper docker images"
      optional: true
    - job: "stable docker images"
      optional: true
    - job: "stable helper docker images"
      optional: true
  stage: postrelease
  variables:
    UPSTREAM_CI_COMMIT_REF: $CI_COMMIT_BRANCH
    UPSTREAM_CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
  trigger:
    project: gitlab-org/ci-cd/tests/runner-incept
    # strategy: depend

static QA:
  extends:
  - .rules:merge_request_pipelines:no_docs
  - .no_cache
  stage: postrelease
  image: alpine:3.14.2
  needs:
  - code_quality
  script: |
    if [ "$(cat gl-code-quality-report.json)" != "[]" ] ; then
      apk add -U --no-cache jq > /dev/null
      jq -C . gl-code-quality-report.json
      exit 1
    fi

.verify-resources:
  extends:
    - .rules:merge_request_pipelines:no_docs
    - .docker
  stage: postrelease
  script:
    - mage resources:verifyAll

verify development resources:
  extends:
  - .verify-resources
  - .rules:release:development:merge-requests
  needs:
  - job: "development docker images"
    artifacts: true
  - job: "development helper docker images"
    artifacts: true

verify bleeding edge resources:
  extends:
  - .verify-resources
  - .rules:release:bleeding-edge
  needs:
  - job: "bleeding edge docker images"
    artifacts: true
  - job: "bleeding edge helper docker images"
    artifacts: true

verify stable resources:
  extends:
  - .verify-resources
  - .rules:release:stable:branch
  needs:
  - job: "stable docker images"
    artifacts: true
  - job: "stable helper docker images"
    artifacts: true
