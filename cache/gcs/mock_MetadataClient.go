// Code generated by mockery v2.53.3. DO NOT EDIT.

package gcs

import mock "github.com/stretchr/testify/mock"

// MockMetadataClient is an autogenerated mock type for the MetadataClient type
type MockMetadataClient struct {
	mock.Mock
}

type MockMetadataClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMetadataClient) EXPECT() *MockMetadataClient_Expecter {
	return &MockMetadataClient_Expecter{mock: &_m.Mock}
}

// Email provides a mock function with given fields: serviceAccount
func (_m *MockMetadataClient) Email(serviceAccount string) (string, error) {
	ret := _m.Called(serviceAccount)

	if len(ret) == 0 {
		panic("no return value specified for Email")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(serviceAccount)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(serviceAccount)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(serviceAccount)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockMetadataClient_Email_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Email'
type MockMetadataClient_Email_Call struct {
	*mock.Call
}

// Email is a helper method to define mock.On call
//   - serviceAccount string
func (_e *MockMetadataClient_Expecter) Email(serviceAccount interface{}) *MockMetadataClient_Email_Call {
	return &MockMetadataClient_Email_Call{Call: _e.mock.On("Email", serviceAccount)}
}

func (_c *MockMetadataClient_Email_Call) Run(run func(serviceAccount string)) *MockMetadataClient_Email_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockMetadataClient_Email_Call) Return(_a0 string, _a1 error) *MockMetadataClient_Email_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockMetadataClient_Email_Call) RunAndReturn(run func(string) (string, error)) *MockMetadataClient_Email_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockMetadataClient creates a new instance of MockMetadataClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMetadataClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMetadataClient {
	mock := &MockMetadataClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
