// Code generated by mockery v2.43.0. DO NOT EDIT.

package s3v2

import (
	context "context"
	time "time"

	mock "github.com/stretchr/testify/mock"

	url "net/url"
)

// mockS3Presigner is an autogenerated mock type for the s3Presigner type
type mockS3Presigner struct {
	mock.Mock
}

// PresignURL provides a mock function with given fields: ctx, method, bucketName, objectName, expires
func (_m *mockS3Presigner) PresignURL(ctx context.Context, method string, bucketName string, objectName string, expires time.Duration) (*url.URL, error) {
	ret := _m.Called(ctx, method, bucketName, objectName, expires)

	if len(ret) == 0 {
		panic("no return value specified for PresignURL")
	}

	var r0 *url.URL
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, time.Duration) (*url.URL, error)); ok {
		return rf(ctx, method, bucketName, objectName, expires)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, time.Duration) *url.URL); ok {
		r0 = rf(ctx, method, bucketName, objectName, expires)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*url.URL)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string, string, time.Duration) error); ok {
		r1 = rf(ctx, method, bucketName, objectName, expires)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// newMockS3Presigner creates a new instance of mockS3Presigner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockS3Presigner(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockS3Presigner {
	mock := &mockS3Presigner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
