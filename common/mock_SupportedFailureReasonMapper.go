// Code generated by mockery v2.53.3. DO NOT EDIT.

package common

import mock "github.com/stretchr/testify/mock"

// MockSupportedFailureReasonMapper is an autogenerated mock type for the SupportedFailureReasonMapper type
type MockSupportedFailureReasonMapper struct {
	mock.Mock
}

type MockSupportedFailureReasonMapper_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSupportedFailureReasonMapper) EXPECT() *MockSupportedFailureReasonMapper_Expecter {
	return &MockSupportedFailureReasonMapper_Expecter{mock: &_m.Mock}
}

// Map provides a mock function with given fields: fr
func (_m *MockSupportedFailureReasonMapper) Map(fr JobFailureReason) JobFailureReason {
	ret := _m.Called(fr)

	if len(ret) == 0 {
		panic("no return value specified for Map")
	}

	var r0 JobFailureReason
	if rf, ok := ret.Get(0).(func(JobFailureReason) JobFailureReason); ok {
		r0 = rf(fr)
	} else {
		r0 = ret.Get(0).(JobFailureReason)
	}

	return r0
}

// MockSupportedFailureReasonMapper_Map_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Map'
type MockSupportedFailureReasonMapper_Map_Call struct {
	*mock.Call
}

// Map is a helper method to define mock.On call
//   - fr JobFailureReason
func (_e *MockSupportedFailureReasonMapper_Expecter) Map(fr interface{}) *MockSupportedFailureReasonMapper_Map_Call {
	return &MockSupportedFailureReasonMapper_Map_Call{Call: _e.mock.On("Map", fr)}
}

func (_c *MockSupportedFailureReasonMapper_Map_Call) Run(run func(fr JobFailureReason)) *MockSupportedFailureReasonMapper_Map_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(JobFailureReason))
	})
	return _c
}

func (_c *MockSupportedFailureReasonMapper_Map_Call) Return(_a0 JobFailureReason) *MockSupportedFailureReasonMapper_Map_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSupportedFailureReasonMapper_Map_Call) RunAndReturn(run func(JobFailureReason) JobFailureReason) *MockSupportedFailureReasonMapper_Map_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSupportedFailureReasonMapper creates a new instance of MockSupportedFailureReasonMapper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSupportedFailureReasonMapper(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSupportedFailureReasonMapper {
	mock := &MockSupportedFailureReasonMapper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
