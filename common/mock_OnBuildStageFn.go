// Code generated by mockery v2.53.3. DO NOT EDIT.

package common

import mock "github.com/stretchr/testify/mock"

// MockOnBuildStageFn is an autogenerated mock type for the OnBuildStageFn type
type MockOnBuildStageFn struct {
	mock.Mock
}

type MockOnBuildStageFn_Expecter struct {
	mock *mock.Mock
}

func (_m *MockOnBuildStageFn) EXPECT() *MockOnBuildStageFn_Expecter {
	return &MockOnBuildStageFn_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: stage
func (_m *MockOnBuildStageFn) Execute(stage BuildStage) {
	_m.Called(stage)
}

// MockOnBuildStageFn_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockOnBuildStageFn_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - stage BuildStage
func (_e *MockOnBuildStageFn_Expecter) Execute(stage interface{}) *MockOnBuildStageFn_Execute_Call {
	return &MockOnBuildStageFn_Execute_Call{Call: _e.mock.On("Execute", stage)}
}

func (_c *MockOnBuildStageFn_Execute_Call) Run(run func(stage BuildStage)) *MockOnBuildStageFn_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(BuildStage))
	})
	return _c
}

func (_c *MockOnBuildStageFn_Execute_Call) Return() *MockOnBuildStageFn_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockOnBuildStageFn_Execute_Call) RunAndReturn(run func(BuildStage)) *MockOnBuildStageFn_Execute_Call {
	_c.Run(run)
	return _c
}

// NewMockOnBuildStageFn creates a new instance of MockOnBuildStageFn. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOnBuildStageFn(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOnBuildStageFn {
	mock := &MockOnBuildStageFn{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
