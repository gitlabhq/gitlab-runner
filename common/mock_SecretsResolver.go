// Code generated by mockery v2.43.0. DO NOT EDIT.

package common

import mock "github.com/stretchr/testify/mock"

// MockSecretsResolver is an autogenerated mock type for the SecretsResolver type
type MockSecretsResolver struct {
	mock.Mock
}

// Resolve provides a mock function with given fields: secrets
func (_m *MockSecretsResolver) Resolve(secrets Secrets) (JobVariables, error) {
	ret := _m.Called(secrets)

	if len(ret) == 0 {
		panic("no return value specified for Resolve")
	}

	var r0 JobVariables
	var r1 error
	if rf, ok := ret.Get(0).(func(Secrets) (JobVariables, error)); ok {
		return rf(secrets)
	}
	if rf, ok := ret.Get(0).(func(Secrets) JobVariables); ok {
		r0 = rf(secrets)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(JobVariables)
		}
	}

	if rf, ok := ret.Get(1).(func(Secrets) error); ok {
		r1 = rf(secrets)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockSecretsResolver creates a new instance of MockSecretsResolver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSecretsResolver(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSecretsResolver {
	mock := &MockSecretsResolver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
