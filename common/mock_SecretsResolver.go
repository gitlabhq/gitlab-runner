// Code generated by mockery v2.53.3. DO NOT EDIT.

package common

import mock "github.com/stretchr/testify/mock"

// MockSecretsResolver is an autogenerated mock type for the SecretsResolver type
type MockSecretsResolver struct {
	mock.Mock
}

type MockSecretsResolver_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSecretsResolver) EXPECT() *MockSecretsResolver_Expecter {
	return &MockSecretsResolver_Expecter{mock: &_m.Mock}
}

// Resolve provides a mock function with given fields: secrets
func (_m *MockSecretsResolver) Resolve(secrets Secrets) (JobVariables, error) {
	ret := _m.Called(secrets)

	if len(ret) == 0 {
		panic("no return value specified for Resolve")
	}

	var r0 JobVariables
	var r1 error
	if rf, ok := ret.Get(0).(func(Secrets) (JobVariables, error)); ok {
		return rf(secrets)
	}
	if rf, ok := ret.Get(0).(func(Secrets) JobVariables); ok {
		r0 = rf(secrets)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(JobVariables)
		}
	}

	if rf, ok := ret.Get(1).(func(Secrets) error); ok {
		r1 = rf(secrets)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockSecretsResolver_Resolve_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Resolve'
type MockSecretsResolver_Resolve_Call struct {
	*mock.Call
}

// Resolve is a helper method to define mock.On call
//   - secrets Secrets
func (_e *MockSecretsResolver_Expecter) Resolve(secrets interface{}) *MockSecretsResolver_Resolve_Call {
	return &MockSecretsResolver_Resolve_Call{Call: _e.mock.On("Resolve", secrets)}
}

func (_c *MockSecretsResolver_Resolve_Call) Run(run func(secrets Secrets)) *MockSecretsResolver_Resolve_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(Secrets))
	})
	return _c
}

func (_c *MockSecretsResolver_Resolve_Call) Return(_a0 JobVariables, _a1 error) *MockSecretsResolver_Resolve_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockSecretsResolver_Resolve_Call) RunAndReturn(run func(Secrets) (JobVariables, error)) *MockSecretsResolver_Resolve_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSecretsResolver creates a new instance of MockSecretsResolver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSecretsResolver(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSecretsResolver {
	mock := &MockSecretsResolver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
