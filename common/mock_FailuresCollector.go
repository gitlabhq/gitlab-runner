// Code generated by mockery v2.53.3. DO NOT EDIT.

package common

import mock "github.com/stretchr/testify/mock"

// MockFailuresCollector is an autogenerated mock type for the FailuresCollector type
type MockFailuresCollector struct {
	mock.Mock
}

type MockFailuresCollector_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFailuresCollector) EXPECT() *MockFailuresCollector_Expecter {
	return &MockFailuresCollector_Expecter{mock: &_m.Mock}
}

// RecordFailure provides a mock function with given fields: reason, runnerDescription
func (_m *MockFailuresCollector) RecordFailure(reason JobFailureReason, runnerDescription string) {
	_m.Called(reason, runnerDescription)
}

// MockFailuresCollector_RecordFailure_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RecordFailure'
type MockFailuresCollector_RecordFailure_Call struct {
	*mock.Call
}

// RecordFailure is a helper method to define mock.On call
//   - reason JobFailureReason
//   - runnerDescription string
func (_e *MockFailuresCollector_Expecter) RecordFailure(reason interface{}, runnerDescription interface{}) *MockFailuresCollector_RecordFailure_Call {
	return &MockFailuresCollector_RecordFailure_Call{Call: _e.mock.On("RecordFailure", reason, runnerDescription)}
}

func (_c *MockFailuresCollector_RecordFailure_Call) Run(run func(reason JobFailureReason, runnerDescription string)) *MockFailuresCollector_RecordFailure_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(JobFailureReason), args[1].(string))
	})
	return _c
}

func (_c *MockFailuresCollector_RecordFailure_Call) Return() *MockFailuresCollector_RecordFailure_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockFailuresCollector_RecordFailure_Call) RunAndReturn(run func(JobFailureReason, string)) *MockFailuresCollector_RecordFailure_Call {
	_c.Run(run)
	return _c
}

// NewMockFailuresCollector creates a new instance of MockFailuresCollector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFailuresCollector(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFailuresCollector {
	mock := &MockFailuresCollector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
