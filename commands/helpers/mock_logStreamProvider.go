// Code generated by mockery v2.53.3. DO NOT EDIT.

package helpers

import mock "github.com/stretchr/testify/mock"

// mockLogStreamProvider is an autogenerated mock type for the logStreamProvider type
type mockLogStreamProvider struct {
	mock.Mock
}

type mockLogStreamProvider_Expecter struct {
	mock *mock.Mock
}

func (_m *mockLogStreamProvider) EXPECT() *mockLogStreamProvider_Expecter {
	return &mockLogStreamProvider_Expecter{mock: &_m.Mock}
}

// Open provides a mock function with no fields
func (_m *mockLogStreamProvider) Open() (readSeekCloser, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Open")
	}

	var r0 readSeekCloser
	var r1 error
	if rf, ok := ret.Get(0).(func() (readSeekCloser, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() readSeekCloser); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(readSeekCloser)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockLogStreamProvider_Open_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Open'
type mockLogStreamProvider_Open_Call struct {
	*mock.Call
}

// Open is a helper method to define mock.On call
func (_e *mockLogStreamProvider_Expecter) Open() *mockLogStreamProvider_Open_Call {
	return &mockLogStreamProvider_Open_Call{Call: _e.mock.On("Open")}
}

func (_c *mockLogStreamProvider_Open_Call) Run(run func()) *mockLogStreamProvider_Open_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockLogStreamProvider_Open_Call) Return(_a0 readSeekCloser, _a1 error) *mockLogStreamProvider_Open_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockLogStreamProvider_Open_Call) RunAndReturn(run func() (readSeekCloser, error)) *mockLogStreamProvider_Open_Call {
	_c.Call.Return(run)
	return _c
}

// newMockLogStreamProvider creates a new instance of mockLogStreamProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockLogStreamProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockLogStreamProvider {
	mock := &mockLogStreamProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
