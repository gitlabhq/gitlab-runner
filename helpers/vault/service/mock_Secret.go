// Code generated by mockery v2.53.3. DO NOT EDIT.

package service

import mock "github.com/stretchr/testify/mock"

// MockSecret is an autogenerated mock type for the Secret type
type MockSecret struct {
	mock.Mock
}

type MockSecret_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSecret) EXPECT() *MockSecret_Expecter {
	return &MockSecret_Expecter{mock: &_m.Mock}
}

// SecretField provides a mock function with no fields
func (_m *MockSecret) SecretField() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for SecretField")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockSecret_SecretField_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SecretField'
type MockSecret_SecretField_Call struct {
	*mock.Call
}

// SecretField is a helper method to define mock.On call
func (_e *MockSecret_Expecter) SecretField() *MockSecret_SecretField_Call {
	return &MockSecret_SecretField_Call{Call: _e.mock.On("SecretField")}
}

func (_c *MockSecret_SecretField_Call) Run(run func()) *MockSecret_SecretField_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSecret_SecretField_Call) Return(_a0 string) *MockSecret_SecretField_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSecret_SecretField_Call) RunAndReturn(run func() string) *MockSecret_SecretField_Call {
	_c.Call.Return(run)
	return _c
}

// SecretPath provides a mock function with no fields
func (_m *MockSecret) SecretPath() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for SecretPath")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockSecret_SecretPath_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SecretPath'
type MockSecret_SecretPath_Call struct {
	*mock.Call
}

// SecretPath is a helper method to define mock.On call
func (_e *MockSecret_Expecter) SecretPath() *MockSecret_SecretPath_Call {
	return &MockSecret_SecretPath_Call{Call: _e.mock.On("SecretPath")}
}

func (_c *MockSecret_SecretPath_Call) Run(run func()) *MockSecret_SecretPath_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSecret_SecretPath_Call) Return(_a0 string) *MockSecret_SecretPath_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSecret_SecretPath_Call) RunAndReturn(run func() string) *MockSecret_SecretPath_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSecret creates a new instance of MockSecret. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSecret(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSecret {
	mock := &MockSecret{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
