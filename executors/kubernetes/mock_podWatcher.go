// Code generated by mockery v2.43.0. DO NOT EDIT.

package kubernetes

import mock "github.com/stretchr/testify/mock"

// mockPodWatcher is an autogenerated mock type for the podWatcher type
type mockPodWatcher struct {
	mock.Mock
}

// Errors provides a mock function with given fields:
func (_m *mockPodWatcher) Errors() <-chan error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Errors")
	}

	var r0 <-chan error
	if rf, ok := ret.Get(0).(func() <-chan error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan error)
		}
	}

	return r0
}

// Start provides a mock function with given fields:
func (_m *mockPodWatcher) Start() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Start")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Stop provides a mock function with given fields:
func (_m *mockPodWatcher) Stop() {
	_m.Called()
}

// UpdatePodName provides a mock function with given fields: _a0
func (_m *mockPodWatcher) UpdatePodName(_a0 string) {
	_m.Called(_a0)
}

// newMockPodWatcher creates a new instance of mockPodWatcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockPodWatcher(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockPodWatcher {
	mock := &mockPodWatcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
