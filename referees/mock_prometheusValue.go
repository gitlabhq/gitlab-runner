// Code generated by mockery v2.53.3. DO NOT EDIT.

package referees

import (
	model "github.com/prometheus/common/model"
	mock "github.com/stretchr/testify/mock"
)

// mockPrometheusValue is an autogenerated mock type for the prometheusValue type
type mockPrometheusValue struct {
	mock.Mock
}

type mockPrometheusValue_Expecter struct {
	mock *mock.Mock
}

func (_m *mockPrometheusValue) EXPECT() *mockPrometheusValue_Expecter {
	return &mockPrometheusValue_Expecter{mock: &_m.Mock}
}

// String provides a mock function with no fields
func (_m *mockPrometheusValue) String() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for String")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// mockPrometheusValue_String_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'String'
type mockPrometheusValue_String_Call struct {
	*mock.Call
}

// String is a helper method to define mock.On call
func (_e *mockPrometheusValue_Expecter) String() *mockPrometheusValue_String_Call {
	return &mockPrometheusValue_String_Call{Call: _e.mock.On("String")}
}

func (_c *mockPrometheusValue_String_Call) Run(run func()) *mockPrometheusValue_String_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockPrometheusValue_String_Call) Return(_a0 string) *mockPrometheusValue_String_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockPrometheusValue_String_Call) RunAndReturn(run func() string) *mockPrometheusValue_String_Call {
	_c.Call.Return(run)
	return _c
}

// Type provides a mock function with no fields
func (_m *mockPrometheusValue) Type() model.ValueType {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Type")
	}

	var r0 model.ValueType
	if rf, ok := ret.Get(0).(func() model.ValueType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(model.ValueType)
	}

	return r0
}

// mockPrometheusValue_Type_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Type'
type mockPrometheusValue_Type_Call struct {
	*mock.Call
}

// Type is a helper method to define mock.On call
func (_e *mockPrometheusValue_Expecter) Type() *mockPrometheusValue_Type_Call {
	return &mockPrometheusValue_Type_Call{Call: _e.mock.On("Type")}
}

func (_c *mockPrometheusValue_Type_Call) Run(run func()) *mockPrometheusValue_Type_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockPrometheusValue_Type_Call) Return(_a0 model.ValueType) *mockPrometheusValue_Type_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockPrometheusValue_Type_Call) RunAndReturn(run func() model.ValueType) *mockPrometheusValue_Type_Call {
	_c.Call.Return(run)
	return _c
}

// newMockPrometheusValue creates a new instance of mockPrometheusValue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockPrometheusValue(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockPrometheusValue {
	mock := &mockPrometheusValue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
